__NUXT_JSONP__("/post/63d6a6932772b5781daab492", (function(a,b,c,d,e,f,g,h,i,j,k,l,m){return {data:[{post:{_id:"63d6a6932772b5781daab492",_sys:{raw:{createdAt:"2023-01-29T17:02:11.761Z",updatedAt:b,firstPublishedAt:b,publishedAt:b},customOrder:4,createdAt:b,updatedAt:b},title:c,slug:"windows-bash-environmental-setting",description:c,meta:{title:c,description:c,ogImage:d},body:"\u003Ch1\u003Eはじめに\u003C\u002Fh1\u003E\n\u003Cp\u003E最近（一年前）に引っ越してから Windows 環境を一新したので、 シェル関連で今までやってきたことをまとめようとおもいます。\u003C\u002Fp\u003E\n\u003Ch1\u003E実行ターミナル\u003C\u002Fh1\u003E\n\u003Cp\u003Eまず、シェルの実行環境は、Windows Terminal と \u003Ca href=\"https:\u002F\u002Fhyper.is\u002F\"\u003EHyper\u003C\u002Fa\u003E を使用しています。\u003Cbr\u003E\u003Cbr\u003E\n気分でどちらを使うか決めているのですが、使いやすさでいうなら Windows Terminal の方がいいです。Windows の Hyper は画面分割ができますが、コピーとペーストのショートカットが通常と違って使いにくいです。\u003C\u002Fp\u003E\n\u003Cp\u003EHyperにはポケモンのテーマなどもあるので、（見にくくなりますが）気になる人は使ってみてもいいかもしれないですね。\u003C\u002Fp\u003E\n\u003Ch1\u003Eシェル\u003C\u002Fh1\u003E\n\u003Cp\u003E基本的に Git Bash を使用しています。\u003Cbr\u003E\u003Cbr\u003E\nGit Bash はGitをインストールする勝手にインストールされているので、使用している人も多いんじゃないでしょうか。\u003C\u002Fp\u003E\n\u003Cp\u003Ebash でできることが大体できますし、デフォルトでgitのブランチが表示されている点が優秀です。\u003C\u002Fp\u003E\n\u003Cp\u003E最初はPowerShellを使用していましたが、\u003Ccode\u003Els\u003C\u002Fcode\u003Eコマンドが使用できなかったり、専用のコマンドがよくわからなかったりと、不満があったので結果として Git Bash を使う形に落ち着いています。\u003C\u002Fp\u003E\n\u003Ch1\u003Eコマンド\u003C\u002Fh1\u003E\n\u003Cp\u003EGit Bashを使いやすくするため、いくつかのコマンドを使えるようにしています。\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Evim\u003C\u002Fli\u003E\n\u003Cli\u003Epeco\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003Eそれぞれ説明していきます。\u003C\u002Fp\u003E\n\u003Ch2\u003EVim\u003C\u002Fh2\u003E\n\u003Cp\u003E名前だけは聞いたことがある人も多いんじゃないでしょうか。Vim はコマンドラインエディタの一種であり、アプリの切り替えを行わずにコマンドラインから直接ファイルの編集を行うことができます。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003E.bashrc\u003C\u002Fcode\u003Eなどのちょっとした設定ファイルなどの編集を行う際などによく使っています。\u003Cbr\u003E\u003Cbr\u003E\nかなり癖のある UI をしていますが、住めば都というように、慣れれば VS Code で Vim の拡張機能を入れたくなるほどになります。\u003C\u002Fp\u003E\n\u003Cp\u003Eまた、プラグインをインストールすることで、デフォルトのカラースキームを変更できたり、エクスプローラーのような機能を追加することもできます。その設定などは機会があれば別の記事にしようと思います。\u003C\u002Fp\u003E\n\u003Ch2\u003EPeco\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fpeco\u002Fpeco\"\u003Epeco\u003C\u002Fa\u003E は与えられた入力を視覚的に選択できるコマンドです。\u003C\u002Fp\u003E\n\u003Cp\u003E基本的なコマンドの使用方法は、与えられた入力リストをselectのように選択させて、選択させたものを文字列として出力します。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-bash\"\u003E# ls の出力リストから選択させる\nls | peco\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E上述のような使い方は基本的にはせずに、\u003Ccode\u003E.bash_history\u003C\u002Fcode\u003Eの内容を読むようにして、\u003Ccode\u003ECtrl + r\u003C\u002Fcode\u003Eなどのバインディングでコマンドの履歴検索をできるようにしています。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fik.imagekit.io\u002Fmasahikoproject\u002F1b9d5393-50b4-46d6-9ce5-0ecd5eb384e3\u002F%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%882023-01-30020344.png\" alt=\"スクリーンショット2023-01-30020344.png\"\u003E\u003C\u002Fp\u003E\n\u003Ch1\u003Eさいごに\u003C\u002Fh1\u003E\n\u003Cp\u003Evim のプラグインなどを考えて記事を書き始めましたが、後からvim関係は別に分けた方がいいのではないかと思い、vim関係を書かなくした結果、思ったより記事の内容が薄くなってしまいました。\u003C\u002Fp\u003E\n\u003Cp\u003Eまぁ、見てる人そんなにいないし、ここまで見ている人いないから、問題なし！ 安全確認ヨシ！\u003C\u002Fp\u003E\n",image:{_id:"63d6a6ff2772b5781daacccc",altText:g,description:"",fileName:"スクリーンショット2023-01-30020344.png",fileSize:6272,fileType:"image\u002Fpng",height:d,metadata:{},src:"https:\u002F\u002Fik.imagekit.io\u002Fmasahikoproject\u002F1b9d5393-50b4-46d6-9ce5-0ecd5eb384e3\u002Fスクリーンショット2023-01-30020344.png",title:g,width:d},author:{_id:"61a7359d8131ac001847fbb4",_sys:{raw:{createdAt:e,updatedAt:f,firstPublishedAt:e,publishedAt:f},createdAt:e,updatedAt:f},name:h,slug:h,biography:"\u003Cp\u003EWebエンジニアです。\u003C\u002Fp\u003E\u003Cp\u003Eよろしくお願いします。\u003C\u002Fp\u003E",image:"63de027516bdb9179566c9ba"},tags:[{_id:i,_sys:{raw:{createdAt:a,updatedAt:a,firstPublishedAt:a,publishedAt:a},createdAt:a,updatedAt:a},name:j,slug:k,image:l}]},tags:[{_id:i,_sys:{raw:{createdAt:a,updatedAt:a,firstPublishedAt:a,publishedAt:a},createdAt:a,updatedAt:a},name:j,slug:k,image:{_id:l,altText:"windows-logo",description:m,fileName:"microsoft-windows.svg",fileSize:740,fileType:"image\u002Fsvg+xml",height:257,metadata:{},src:"https:\u002F\u002Fstorage.googleapis.com\u002Fp_6302578c3183a77882ff85f3\u002F37f55cea-032f-4675-bc9e-e8bb4dbeeedc%2Fmicrosoft-windows.svg",title:m,width:256}}]}],fetch:{},mutations:void 0}}("2022-09-04T07:34:22.644Z","2023-01-29T17:50:08.797Z","Windowsのbash環境を整備していく",null,"2021-12-01T08:43:09.433Z","2023-02-04T07:00:38.318Z","peco bash windows","masa","631454fed59cbbc5fa2b599f","Windows","windows","631454f0d59cbbc5fa2b5941","Windows ロゴ")));